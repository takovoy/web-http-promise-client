'use strict';Object.defineProperty(exports,'__esModule',{value:true});var mock_namespace_1=require('./mock.namespace');var XMLHttpRequestMock=function(){function XMLHttpRequestMock(){XMLHttpRequestMock.context.addInstance(this);}Object.defineProperty(XMLHttpRequestMock.prototype,'responseType',{set:function(value){XMLHttpRequestMock.context.call('responseType',arguments);},enumerable:true,configurable:true});XMLHttpRequestMock.prototype.open=function(method,url){XMLHttpRequestMock.context.call('open',arguments);};XMLHttpRequestMock.prototype.setRequestHeader=function(headerName,headerValue){XMLHttpRequestMock.context.call('setRequestHeader',arguments);};XMLHttpRequestMock.prototype.send=function(payload){XMLHttpRequestMock.context.call('send',arguments);};XMLHttpRequestMock.context=new mock_namespace_1.MockNamespace.MockContext();return XMLHttpRequestMock;}();exports.XMLHttpRequestMock=XMLHttpRequestMock;