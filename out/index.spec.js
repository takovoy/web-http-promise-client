'use strict';Object.defineProperty(exports,'__esModule',{value:true});var chai_1=require('chai');require('mocha');var index_1=require('./index');var xhr_mock_1=require('./xhr.mock');index_1.HTTPClient.getTransport=function(){return new xhr_mock_1.XMLHttpRequestMock();};describe('HTTPClient tests',function(){beforeEach(function(){xhr_mock_1.XMLHttpRequestMock.context.clear();});describe('makeRequest method tests',function(){it('should call open xhr method once',function(){index_1.HTTPClient.makeRequest('someUrl','get',null);var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('open');chai_1.expect(caller.getCallsCount()).equal(1,'Count of "open" method\'s calls is not equal 1');});it('should set request\'s method and url',function(){index_1.HTTPClient.makeRequest('someTestUrl','GET',null);var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('open');var args=caller.getArguments(0);chai_1.expect(args[0]).equal('GET','Request\'s method is not equal original value');chai_1.expect(args[1]).equal('someTestUrl','Request\'s url is not equal original value');});it('should set upper request method\'s cases',function(){index_1.HTTPClient.makeRequest('someUrl','get',null);var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('open');var args=caller.getArguments(0);chai_1.expect(args[0]).equal('GET','Request\'s method is not upper cased');});it('should set query parameters',function(){index_1.HTTPClient.makeRequest('someUrl','get',null,{param1:'value1',param2:'value2'});var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('open');var args=caller.getArguments(0);chai_1.expect(args[1]).equal('someUrl?param1=value1&param2=value2','Count of "responseType" sets is not equal 1');});it('should set request headers',function(){index_1.HTTPClient.makeRequest('someUrl','get',null,null,{header1:'headerValue1',header2:'headerValue2'});var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('setRequestHeader');var argsList=caller.getAllArguments();chai_1.expect(argsList[0][0]).equal('header1');chai_1.expect(argsList[0][1]).equal('headerValue1');chai_1.expect(argsList[1][0]).equal('header2');chai_1.expect(argsList[1][1]).equal('headerValue2');});it('should set response type once',function(){index_1.HTTPClient.makeRequest('someUrl','get',null);var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('responseType');chai_1.expect(caller.getCallsCount()).equal(1,'Count of "responseType" sets is not equal 1');});it('should call \'send\' method once',function(){index_1.HTTPClient.makeRequest('someUrl','get',null);var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('send');chai_1.expect(caller.getCallsCount()).equal(1,'Count of "send" method calls is not equal 1');});it('should call \'send\' with the same payload as in call',function(){index_1.HTTPClient.makeRequest('someUrl','get','some payload');var caller=xhr_mock_1.XMLHttpRequestMock.context.getMethodCalls('send');var args=caller.getArguments(0);chai_1.expect(args[0]).equal('some payload','Payload is not equal original value');});});});