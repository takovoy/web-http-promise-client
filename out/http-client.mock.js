'use strict';Object.defineProperty(exports,'__esModule',{value:true});const index_1=require('./index');const xhr_mock_1=require('./xhr.mock');const test_mock_namespace_1=require('test-mock.namespace');class HttpClientMock{constructor(payload){this.payload=payload;this.context=new test_mock_namespace_1.MockNamespace.MockContext();this.contentTypes={json:'application/json; charset=UTF-8',html:'text/html; charset=utf-8',text:'text/plain; charset=utf-8'};}getTransport(){const transportInstance=new xhr_mock_1.XMLHttpRequestMock();this.context.addInstance(transportInstance);return transportInstance;}makeRequest(url,method,payload,query={},headers={},responseType='json'){this.context.call('makeRequest',arguments);return index_1.HTTPClient.makeRequest.apply(this,arguments).then(()=>this.payload);}get(url,payload=null,query={},noCache=true,contentType=index_1.HTTPClientContentTypesEnum.json){this.context.call('get',arguments);return index_1.HTTPClient.get.apply(this,arguments).then(()=>this.payload);}post(url,payload=null,query={},noCache=true,contentType=index_1.HTTPClientContentTypesEnum.json){this.context.call('post',arguments);return index_1.HTTPClient.post.apply(this,arguments).then(()=>this.payload);}put(url,payload=null,query={},noCache=true,contentType=index_1.HTTPClientContentTypesEnum.json){this.context.call('put',arguments);return index_1.HTTPClient.put.apply(this,arguments).then(()=>this.payload);}}exports.HttpClientMock=HttpClientMock;