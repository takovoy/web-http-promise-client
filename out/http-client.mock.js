'use strict';var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,'__esModule',{value:true});var index_1=require('./index');var xhr_mock_1=require('./xhr.mock');var mock_namespace_1=require('./mock.namespace');var HttpClientMock=function(_super){__extends(HttpClientMock,_super);function HttpClientMock(){return _super!==null&&_super.apply(this,arguments)||this;}HttpClientMock.getTransport=function(){return new xhr_mock_1.XMLHttpRequestMock();};HttpClientMock.makeRequest=function(url,method,payload,query,headers,responseType){if(query===void 0){query={};}if(headers===void 0){headers={};}if(responseType===void 0){responseType='json';}this.context.call('makeRequest',arguments);return index_1.HTTPClient.makeRequest.call(this,arguments);};HttpClientMock.get=function(url,payload,query,noCache,contentType){if(payload===void 0){payload=null;}if(query===void 0){query={};}if(noCache===void 0){noCache=true;}if(contentType===void 0){contentType=index_1.HTTPClientContentTypesEnum.json;}this.context.call('get',arguments);return index_1.HTTPClient.get.call(this,arguments);};HttpClientMock.post=function(url,payload,query,noCache,contentType){if(payload===void 0){payload=null;}if(query===void 0){query={};}if(noCache===void 0){noCache=true;}if(contentType===void 0){contentType=index_1.HTTPClientContentTypesEnum.json;}this.context.call('post',arguments);return index_1.HTTPClient.post.call(this,arguments);};HttpClientMock.put=function(url,payload,query,noCache,contentType){if(payload===void 0){payload=null;}if(query===void 0){query={};}if(noCache===void 0){noCache=true;}if(contentType===void 0){contentType=index_1.HTTPClientContentTypesEnum.json;}this.context.call('put',arguments);return index_1.HTTPClient.put.call(this,arguments);};HttpClientMock.context=new mock_namespace_1.MockNamespace.MockContext();return HttpClientMock;}(index_1.HTTPClient);exports.HttpClientMock=HttpClientMock;